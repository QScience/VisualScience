<?php

/**
 * @file
 * The VisualScience Module, from QScience.
 *
 * It allows you to sort, contact and visualize scientific data about you users.
 */

// Tools pre-made by Vahe.
require_once 'includes/visualscience.settings.inc';
require_once 'includes/visualscience.utils.inc';

// Classes for each functionality.
require_once 'includes/visualscience.searchtable.class.php';
include_once 'includes/visualscience.message.class.php';
include_once 'includes/visualscience.upload.class.php';
include_once 'includes/visualscience.config.class.php';

define('VISUALSCIENCE_NUSER_LOADED', 1000);


/**
 * Implements hook_menu().
 */
function visualscience_menu() {

  $items['visualscience'] = array(
    'title' => 'Visual Science',
    'description' => 'Visual Science description',
    'page callback' => 'visualscience_page',
    'access arguments' => array('access visualscience'),
    // 'access callback' => TRUE,
    'weight' => 30,
  );

  $items['visualscience/users'] = array(
    'title' => 'VisualScience Users Access',
    'description' => 'Get Users of VisualScience',
    'page callback' => 'visualscience_users',
    'access arguments' => array('access visualscience'),
    'type' => MENU_CALLBACK,
  );

  $items['visualscience/upload'] = array(
    'title' => 'VisualScience Upload',
    'description' => 'Upload a file in VisualScience',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('visualscience_upload_form'),
    'access arguments' => array('access visualscience'),
    'type' => MENU_CALLBACK,
  );

  $items['visualscience/file'] = array(
    'title' => 'VisualScience Attachment Access',
    'description' => 'Access a file uploaded from VisualScience',
    'page callback' => 'visualscience_get_file_with_id',
    // 'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['visualscience/mail'] = array(
    'title' => 'VisualScience Mail Send',
    'description' => 'Send Mail from VisualScience',
    'page callback' => 'visualscience_send_message',
    'access arguments' => array('access visualscience'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/media/visualscience'] = array(
    'title' => 'VisualScience Configuration',
    'description' => 'Configuration for the VisualScience module.',
    'page callback' => 'visualscience_config_page',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Form to upload a file to VisualScience.
 * 
 * @param form $form       
 *   Drupal-generated.
 * @param form-state $form_state 
 *   Drupal-generated.
 * 
 * @return string             
 *   HTML with form to be printed.
 */
function visualscience_upload_form($form, &$form_state) {
  $upload = new VisualscienceUpload();
  return $upload->visualscienceUploadForm($form, $form_state);
}

/**
 * Getting the file securely.
 * 
 * @return file 
 *   If denied a webpage else the requested file.
 */
function visualscience_get_file_with_id() {
  $upload = new VisualscienceUpload();
  return $upload->visualscienceGetFileWithId();
}

/**
 * Sending an email throught this Drupal's installation.
 * 
 * @return string 
 *   Notification if success or error.
 */
function visualscience_send_message() {
  $message = new VisualscienceMessage();
  return $message->visualscienceSendMessage();
}

/**
 * Backend when a file has to be uploaded.
 * 
 * @param Drupal $form       
 *   Automatically generated by Drupal
 * @param Drupal $form_state 
 *   Automatically generated by Drupal
 *   
 * @return string             
 *   Notification if success or error and informations about it
 */
function visualscience_upload_submit($form, &$form_state) {
  $upload = new VisualscienceUpload();
  return $upload->visualscienceUploadSubmit($form, $form_state);
}

/**
 * The main webpage for VisualScience.
 *
 * @param bool $clear 
 *   Drupal-generated.
 * 
 * @return string         
 *   The webpage to be printed.
 */
function visualscience_page($clear = TRUE) {
  $search = new VisualscienceSearch();
  $search_to_perform = $search->getSavedSearch();
  $search->getClientSideFiles();
  $search_bar = $search->getHtmlSearchBar($search_to_perform);
  $search_table = $search->getHtmlsearchTable();
  $output = $search_bar . $search_table;
  return $output;
}

/**
 * Configuration page for the VisualScience module.
 * 
 * @param bool $clear 
 *   Whether the form is cleared or not(Drupal-generated).
 *   
 * @return string         
 *   The page to be displayed.
 */
function visualscience_config_page($clear = TRUE) {
  $config = new VisualscienceConfig();
  $output = '';
  if (isset($_POST['visualscience_config_form']) && $_POST['visualscience_config_csrf_token'] == $_COOKIE['csrfTokenValue']) {
    $config->saveSentValues();
    drupal_set_message(t('Configuration Saved !'), 'status');
  }
  $output .= $config->getHtmlConfigPage();
  return $output;
}

/**
 * Backend to get the list of users from the server.
 * 
 * @return json 
 *   The list of users with some additional informations.
 */
function visualscience_users() {
  $search = new VisualscienceSearch();
  $from = intval($_GET['userId']);
  $database = $search->getUsersEntries($from, variable_get('visualscience_user_sent_per_ajax_request', 1000));
  echo $database;
}

/**
 * Implements hook_css_alter().
 * 
 * When using the CSS selector jQuery UI suggests,
 * we don't have the expected performance(Really slow with > 10'000 checkboxes).
 */
function visualscience_css_alter(&$css) {
  if (isset($css['misc/ui/jquery.ui.theme.css'])) {
    $css['misc/ui/jquery.ui.theme.css']['data'] = drupal_get_path('module', 'visualscience') . '/css/visualscience.jquery.ui.theme.css';
  }
}
