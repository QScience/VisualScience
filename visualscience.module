<?php

/**
 * @file
 * This module is used to search and visualize users/nodes.
 * The visualization must be done by separate modules, which will be shown as tabs. To do so your module must implement the following:
 * 1. Implement hook_science_title() - just returns the title of the tab
 * 2. Implement hook_science_tab($list) - return the HTMLed visualization of the given list
 * 3. keep all the content inside <div id="visualscince_MODULENAME">...</div> - this is needed to update the tab according to the search (using AJAX)
 * 
 */

require_once 'includes/visualscience.search.inc';
require_once 'includes/visualscience.settings.inc';
require_once 'includes/visualscience.utils.inc';


/**
 * TODO: feature: change the current search, get the results directly from the DB(in process, Vahan)
 * TODO: bug: inner not does not work!
 * TODO: bug: very quickly check/uncheck fields to show. Then user lsit columns are brocken
 * TODO: bug: set currect email text and subject
 * TODO: feature: add the list of users to whom the message is being sent to the message sending page;
 * TODO: feature: make the search box the default active field
 * FIXED: bug: fix positions when ajax is in process
 * TODO: bug: after clicking on letters autocomplete does not work
 * DONE: bug: empty search returns nothing, should return a complete list
 * DONE: feature: after loading a search search is not done, still there is a need to refine the search
 * FIXED: bug: if nothing is found a full list is returned, but should return nothing
 * TODO: bug: sometimes the search load/save puts a wrong url - additional "q=userlist", FIXED at 22.06.2011, see line 259.
 * TODO: feature: save shown fields with the saved search
 * TODO: change all inner links to use l() functionuser
 * TODO: the help text on top doesn't make too much sence. Especially the part with blocks and permissions.
 * 
 * FIXED: bug 1: after ajax search, the bottom links to access paginated search are not updated. If you try to click on them you get an error msg.
 * FIXED: bug 2: authenticated role does not show up?  See get_user_role in includes\user_list.utils.inc
 * FIXED: bug 3: no-more 'select all' checkbox after an ajax request?
 * 
 * DONE: feature 1: We need to create an easier and more powerful way to handle to ajax search. We need to be able to use boolean logic: OR, AND, NOT  
 * DONE: feature 2: add button search/reset next to the ajax search
 * TODO: feature 3: we leave on a side the 'selected_users' table. Instead we display all the users within a box which has a vertical scroll bar
 * DONE: feature 4: The ajax search will hide what we don't want to see on a particular moment              
 * DONE: feature 5: save the query strings on the server, so that we immediately found our old search results with updated users.
 * TODO: feature 6: we will need to test it with huge amount of users to see how well it performs...
 * DONE: feature 7: userlist/export/ create automatic exports for roles
 * FIXED: BUG when loading search on urls with ?q
 */

/**
 * Implementation of hook_menu().
 */
function visualscience_menu() {
  $items['admin/settings/visualscience'] = array(
    'title' => 'Visual Science',
    'description' => 'Change the format and types of search and menus that appear on the site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('visualscience_admin_settings'),
    'access arguments' => array('administer visualscience'),
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  
  $items['admin/visualscience'] = array(
    'title' => 'Visual Science',
    'description' => 'Visual Science',
    'page callback' => 'visualscience_redirect_to_visualscience',
    'access arguments' => array('access visualscience'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  // Autocompletion Url
  $items['visualscience/autocomplete'] = array(
    'title' => 'Autocomplete Visual Science',
    'page callback' => 'visualscience_autocomplete',
    'access arguments' => array('access visualscience'),
    'type' => MENU_CALLBACK,
  );  
  
  $items['visualscience'] = array(
    'title' => 'Visual Science',
    'description' => 'Visual Science description',
    'page callback' => '_visualscience_page',
    'page arguments' => array(FALSE),
    'access callback' => TRUE,
    'weight' => 30,
  );
      
  $tabs = module_implements("science_title"); //Each module that wants to have a view in VisualScience must implement hook_science_view
  $weight = -1;
  foreach($tabs as $tab_name) {
    $weight++;
    $tab_title = module_invoke($tab_name, 'science_title');
    /*if ($weight == 0) {
      // Create the visualscience page
      $items['visualscience'] = array(
        'title' => 'Visual Science',
        'description' => 'Visual Science description',
        'page callback' => '_visualscience_page',
      	'page arguments' => array($tab_name),
        'access callback' => TRUE,
        'weight' => 30,
      );
      $items['visualscience/default'] = array( //create a default tab
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'title' => $tab_title,
        'weight' => $weight,
      );
      continue;
    }*/
    $items["visualscience/".$tab_name] = array(
      'type' => MENU_LOCAL_TASK,
      'title' => $tab_title,
      'page callback' => '_visualscience_page',
      'page arguments' => array($tab_name),
      'access callback' => TRUE,
      'weight' => $weight,
    );
  }
  /*$items["visualscience/test"] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => "Test",
    'page callback' => '_visualscience_page',
    'page arguments' => array("<div>TEST</div>", "test"),
    'access callback' => TRUE,
    'weight' => 10,
  );*/

  return $items;
}

/**
 * 
 * Creates the visualscience page
 */
function _visualscience_page($tab_name) {
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_js(drupal_get_path('module', 'visualscience') .'/visualscience.js');
  drupal_add_css(drupal_get_path('module', 'visualscience') .'/visualscience.css');
      
  //correct the current tab, as sometimes it's set to wrong values. TODO: it's wierd, isn't it?
  /*$tab_name = NULL;
  p(arg(1));
  $arg = arg(1);
  $tabs = module_implements("science_title");
  p($tabs);
  if (isset($arg) && in_array($arg, $tabs)) $tab_name = $arg;*/
  p('tab is '.$tab_name);
  if ($tab_name) {
    variable_set('visualscience_current_tab', $tab_name);
  }
  elseif(!in_array('autocomplete', arg())) { //persistent variables souldn't be deleted at autocomplete
    //variable_set('visualscience_debugger', implode(', ', arg()).'/n/t delete');
    variable_del('visualscience_current_tab');
    variable_del('visualscience_list');
  }

  $list = variable_get('visualscience_list');
  //if ($list == NULL) $list = visualscience_search("*");
  $output = drupal_render(drupal_get_form('visualscience_search_form'));
  if (isset($tab_name)) $output .= module_invoke($tab_name, 'science_tab', $list);
  
  return $output;
}

/**
 * 
 * Used to create menu tabs
 * @param string $tab_name	name of the tab to shown, if NULL the default tab is shown
 */
/*function _visualscience_tab($tab_name) {
  variable_set("visualscience_current_tab", $tab_name);
  $list = variable_get("visualscience_list");
  $output = drupal_render(drupal_get_form('visualscience_search_form'));
  $output .= module_invoke($tab_name, 'science_tab', $list);
  return $output;
}*/

/**
 * 
 * Enter description here ...
 */
/*function visualscience_theme() {
  return array(
    'visualscience_searchbox' => array(
      'arguments' => array('content', NULL),
    ),
    'visualscience_menu' => array(
      'arguments' => array(array()),
    ),
  );
}*/


?>