<?php 

/**
* @file
* The Patterns implementation of the VisualScience Module.
*
* Automatically import pattern-formatted settings for VisualScience.
*/

require_once drupal_get_path('module', 'visualscience') . '/includes/visualscience.searchtable.class.php';
require_once drupal_get_path('module', 'visualscience') . '/includes/visualscience.config.class.php';

function visualscience_patterns($data = NULL)  {
	$action['visualscience_config'] = array(
		PATTERNS_INFO   => t('Modify Configuration for VisualScience'),
		PATTERNS_CREATE => array('visualscience_insert_config'),
		PATTERNS_MODIFY => array('visualscience_modify_config'),
		PATTERNS_EXPORT => array(
			PATTERNS_EXPORT_ALL => 'visualscience_export_config',
			),
		);

	return $action;
}

function visualscience_patterns_validate($action, $tag, &$data) {
	$config = new Config;
	$field = $data;
	$uncomplete_field = $config->checkCompletefield($field);
	$result = array();
	$status = PATTERNS_SUCCESS;
	$msg = 'An error occured in your file.';

	if (!isset($field['name'])) {
		$status = PATTERNS_ERR;
		$msg = t('A field doesn\'t have a name.');
	}
	else if ($field['name'] == 'nbUsersPerPage' || $field['name'] == 'nbUsersPerAjax') {
		//Checking for settings: nbUsersPerPage and nbUsersPerAjax.
			//Semantic: 
		if (gettype($field['value']) != 'integer') {
			$status = PATTERNS_ERR;
			$msg = t('The field "' . $field['name'] . '" has a wrong value type.');
		}

			//Syntax Check:
		if (!isset($field['value'])) {
			$status = PATTERNS_ERR;
			$msg = t('The field "' . $field['name'] . '" doesn\'t have a value.');
		}

	}
	else {
		//Here we check for every field in the MySQL Table.
		if ($action == PATTERNS_CREATE) {
		//Semantic Checking
			if (!$config->fieldExistsInDB($field)) {
				$msg = '';
			}
			else {
				$msg = t('The field already exists in the database.');
				$result[] = array(
					PATTERNS_WARNING_ELEMENT_UNDEFINED => t('The field "' . $field['name'] . '" already exists in the database.')
					);
			}

		//Syntax Checking:
			if (!$uncomplete_field) {
				if (!($wrong_value_type = $config->checkCorrectValueTypes($field))) {
					$msg = '';
				}
				else {
					$status = PATTERNS_ERR;
					$msg = t('The field "' . $wrong_value_type . '" has a wrong value type for "' . $field['name'] . '".');
				}
			}
			else {
				$status = PATTERNS_ERR;
				$msg = t('The field "' . $uncomplete_field . '" is not defined for "' . $field['name'] . '".');
			}
		}

		if ($action == PATTERNS_MODIFY) {
			//Semantic Check:
			if ($config->fieldExistsInDB($field)) {
			}
			else {
				$msg = t('The field "' . $field['name'] . '" does not already exist in the database.');
				$result[] = array(
					PATTERNS_WARNING_ELEMENT_UNDEFINED => t('The field ' . $field['name'] . ' does not already exist in the database.')
					);
			}

			//Syntax Checking
			if (!$uncomplete_field) {
				if (!($wrong_value_type = $config->checkCorrectValueTypes($field))) {
					$msg = '';
				}
				else {
					$status = PATTERNS_ERR;
					$msg = t('The field "' . $wrong_value_type . '" has a wrong value type for ' . $field['name'] . '.');
				}
			}
			else {
				$status = PATTERNS_ERR;
				$msg = t('The field "' . $uncomplete_field . '" is not defined for ' . $field['name'] . '.');
			}
		}
	}
	return patterns_results($status, $msg, $result);
}

function visualscience_insert_config($form_id, $form_state) {
	$config = new Config;
	$field = $form_state['values'];
	if ($field['name'] == 'nbUsersPerPage') {
		$config->updateNbUsersPerPage($field['value']);
	}
	else if ($field['name'] == 'nbUsersPerAjax') {
		$config->updateNbUsersPerAjax($field['value']);
	}
	else {
		$config->insertPatternConfig($field);
	}
}

function visualscience_modify_config($form_id, $form_state) {
	$config = new Config;
	$field = $form_state['values'];
	if ($field['name'] == 'nbUsersPerPage') {
		$config->updateNbUsersPerPage($field['value']);
	}
	else if ($field['name'] == 'nbUsersPerAjax') {
		$config->updateNbUsersPerAjax($field['value']);
	}
	else {
		$config->modifyPatternConfig($field);
	}	
}

function visualscience_export_config($args = NULL, &$result = NULL) {
	$actions = array();
	$action_type = PATTERNS_MODIFY; // pre-init 
	
	if (isset($args['type']) && $args['type'] == PATTERNS_CREATE) {
		$action_type = PATTERNS_CREATE;
	}

	$search = new Search;
	$fields =  $search->getPatternConfiguration();
	foreach ($fields as $field) {
		$action = array($action_type => array(
			'tag' => 'visualscience_config', 
			'name' => $field['name'], 
			'mini' => $field['mini'], 
			'full' => $field['full'], 
			'first' => $field['first'], 
			'last' => $field['last']
			));

		array_push($actions, $action);
	}

	$action = array($action_type => array(
		'tag' => 'visualscience_config',
		'name' => 'nbUsersPerPage',
		'value' => variable_get('visualscience_user_per_search_page')
		));
	array_push($actions, $action);

	$action = array($action_type => array(
		'tag' => 'visualscience_config',
		'name' => 'nbUsersPerAjax',
		'value' => variable_get('visualscience_user_sent_per_ajax_request')
		));
	array_push($actions, $action);

	return $actions;
}